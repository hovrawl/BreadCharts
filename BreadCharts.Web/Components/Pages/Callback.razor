@page "/callback"
@using BreadCharts.Core.Services
@using BreadCharts.Web.Components.Account
@using BreadCharts.Web.Data
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject SpotifyAuthService SpotifyAuthService
@inject IdentityUserAccessor UserAccessor

@attribute [Authorize]

<p>Linking your Spotify account...</p>

@code {
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;
    
    private ApplicationUser user = default!;
    
    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

    }
    
    bool hasRedirected = false;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (user != null && firstRender && !hasRedirected)
        {
            var uri = new Uri(NavigationManager.Uri);
            var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
            var code = queryParams["code"];

            if (!string.IsNullOrEmpty(code))
            {
                hasRedirected = true;

                try
                {
                    var authed = await SpotifyAuthService.ChallengeCallback(user.Id, code);
                    if (authed) NavigationManager.NavigateTo("/", replace: true);
                    else
                    {
                        // error authing
                    }
                }
                catch (Exception ex)
                {
                    Console.Error.WriteLine($"Token exchange failed: {ex.Message}");
                    NavigationManager.NavigateTo("/error", replace: true);
                }
            }
        }
    }
}